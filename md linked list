#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *next;
};
struct node *head=NULL;

/*struct node* create_list()
{
	head=NULL;
	return head;
}*/

void insertAtBeg(int no)
{
	struct node *tmp;
	tmp=(struct node*)malloc(sizeof(struct node));
	tmp->data=no;
	tmp->next=NULL;

	if(head==NULL)
	{
		head=tmp;
	}
	else
	{
		tmp->next=head;
		head=tmp;
	}
}
void insertAtEnd(int no)
{
	struct node *tmp,*q;
	tmp=(struct node*)malloc(sizeof(struct node));
	tmp->data=no;
	tmp->next=NULL;

	if(head==NULL)
	{
		head=tmp;
	}
	else
	{
		q=head;
		while(q->next!=NULL)
		{
			q=q->next;
		}
		q->next=tmp;
	}
}

void insertAtPos(int no,int pos)
{
	struct node *tmp,*q;
	tmp=malloc(sizeof(struct node));
	tmp->data=no;
	tmp->next=NULL;
	int i=1;
	if(head==NULL)
	{
		head=tmp;
	}
	else
	{
		q=head;
		while(q->next!=NULL)
		{
			if(pos==i)
			break;
			q=q->next;
			i++;
		}
		tmp->next=q->next;
		q->next=tmp;
	}
}

int delAtBeg()
{
	struct node *q;

	if(head==NULL)
		return NULL;
	q=head;
	head=q->next;
	int tn=q->data;
		free(q);
	return tn;

}
int delAtEnd()
{
	struct node *q,*tmp;
	if(head==NULL)
		return NULL;
	q=head;
	while(q->next->next!=NULL)
	{
		q=q->next;
	}
	int tm =q->next->data;
	tmp=q->next;
	q->next=NULL;
	free(tmp);
	return tm;

}
int delAtPos(int pos)
{
	struct node *q1,*q2;
	int i=0,tn;
	if(head==NULL)
		return NULL;
	q1=head;
	while(q1->next!=NULL && i!=pos)
	{
		q2=q1;
		i++;
		q1=q1->next;
	}
	if(i==pos)
	{
		q2->next=q1->next;
	}
	if(q1->next==NULL && i!=pos)
		return -1;

    tn=q1->data;
    q2->next=NULL;
	free(q1);
	return tn;

}

void display()
{
	struct node *q;
	if(head==NULL)
	{
		printf("\nEmpty List\n");
		return;
	}
	q=head;
	while(q!=NULL)
	{
		printf("%d\t",q->data);
		q=q->next;
	}
}

int main()
{
	int deleted;
	int no,cho,pos;
	do
	{
		printf("\n1. Insert Data At Beginning ");
		printf("\n2. Insert Data At End ");
		printf("\n3. Insert Data At Position ");
		printf("\n4. Delete Data At Beginning ");
		printf("\n5. Delete Data At End ");
		printf("\n6. Delete Data At Position");
		printf("\n7. Display list");
		printf("\n8. Search Data ");
		printf("\n9. Exit");

		printf("\n Enter Your Choice : ");
		scanf("%d",&cho);

		if(cho==1)
		{
			printf("\nEnter Number To Insert : ");
			scanf("%d",&no);
			insertAtBeg(no);
		}
		else if(cho==2)
		{
			printf("\nEnter Number To Insert : ");
			scanf("%d",&no);
			insertAtEnd(no);
		}
		else if(cho==3)
		{
			int pos;
			printf("\nEnter Number To Insert : ");
			scanf("%d",&no);
			printf("\nEnter Position : ");
			scanf("%d",&pos);
			insertAtPos(no,pos);
		}
		else if(cho==4)
		{
			deleted=delAtBeg();
			if(deleted==NULL)
			printf("\nList is Empty");
			else
			printf("\n%d Deleted",deleted);
		}
		else if(cho==5)
		{
			deleted=delAtEnd();
			if(deleted==NULL)
			printf("\nList is Empty");
			else
			printf("\n%d Deleted",deleted);
		}
		else if(cho==6)
		{
			printf("\nEnter Position to delete : ");
			scanf("%d",&pos);
			deleted=delAtPos(pos);
			if(deleted==NULL)
			printf("\nList is Empty");
			else if(deleted==-1)
			printf("\nPosition Does Not Exist \n");
			else
			printf("\n%d Deleted",deleted);
		}
		else if(cho==7)
		{
			display();
		}

	}while(cho>=1 && cho<=8);

}

