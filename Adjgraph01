#include<stdio.h>
#define MAX 20
int adj[MAX][MAX];
int n;
void main()
{
	int max_e,i,j,origin,destin,cho;
	char graph_type;
	
	while(1)
	{
		printf("\n1.INSRET NODE ");
		printf("\n2.DELETE NODE ");
		printf("\n3.DISPLAY ");
		printf("\n4.EXIT");
		
		printf("\nENTER YOUR CHOICE: ");
		scanf("%d",&cho);
		
	if(cho==1)
	{
	printf("\n ENTER NUMBER OF NODES: ");
	scanf("%d",&n);
	
	printf("\nENTER TPYE OF GRAPH d/u: ");
	fflush(stdin);
	scanf("%c",&graph_type);
	if(graph_type == 'u')
		max_e= n*(n-1)/2;
	else
		max_e= n*(n-1);
		
		for(i=1;i<max_e;i++)
		{
			printf("ENTER EDGE %d(0 0 to quit): ");
			scanf("%d %d",&origin,&destin);
			
			if(origin==0 && destin==0)
				break;
			else
			{
				if(origin>n || destin>n || origin<=0 || destin<=0)
				{
					printf("\n INVAILD EDGE....!\n");
					i--;
				}
				else
				{
					adj[origin][destin]=1;
					if(	graph_type =='u')
						adj[destin][origin]=1;

				}
			}
		}
	}
	else if(cho==2)
	{
		for(i=1;i<max_e;i++)
		{
			printf("ENTER EDGE (0 0 to quit) to delete: ");
			scanf("%d %d",&origin,&destin);
			if(origin==0 && destin==0)
				break;
			else
			{
				if(origin>n || destin>n || origin<=0 || destin<=0)
				{
					printf("\n INVAILD EDGE....!\n");
					i--;
				}
				else
				{
					adj[origin][destin]=0;
					if(	graph_type=='u')
						adj[destin][origin]=0;

				}
			}
		}
	}
	else if(cho==3)
	{
		printf("\n ADJACENY MATRIX IS \n");
		for(i=0;i<=n;i++)
		{
			for(j=1;j<=n;j++)
				printf("%4d",adj[i][j]);
				
				printf("\n");
		}
	}
	
			
}

}
