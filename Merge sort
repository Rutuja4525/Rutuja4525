#include<stdio.h>
int mergeSort(int arr[],int low,int high)
{
if(low < high)
{
int mid =(low+high)/2;
mergeSort(arr,low,mid);
mergeSort(arr,mid+1,high);
merge(arr,low,mid,high);
}
}

int merge(int arr[],int low,int mid,int high)
{
int i,k=low;
int n1=mid-low +1;
int n2=high-mid;
int arr1[n1];
int arr2[n2];
for(i=0;i<n1;i++)
 arr1[i]=arr[low+i];
 
for(i=0;i<n2;i++)
arr2[i]=arr[i+mid+1];
int p=0,q=0;

while(p<n1 && q<n2)
{
if(arr1[p] <=arr2[q])
{
arr[k]=arr1[p];
k++;
p++;
}
else
if(arr1[p]>arr2[q])
{
arr[k]=arr2[q];
q++;
k++;

}
}

while(p<n1)
{
arr[k]=arr1[p];
p++;
k++;

}
while(q<n2)
{
arr[k]=arr2[q];
q++;
k++;
}

}
int main()
{
int arr[]={15,10,5,7,199,2,1,0,99,100};
int n = 10,i;
int low=0,high=n;
mergeSort(arr,low,high-1);
for(i=0;i<n;i++)
{
printf("%d\t",arr[i]);
}
}
